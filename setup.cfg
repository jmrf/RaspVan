# pytest pycodestyle configuration
[tool:pytest]
# Function starting with the following pattern are considered for test cases.
python_functions=test_

[tool.ruff]
line-length = 88
output-format = "grouped"

[tool.ruff.lint]
select = [  # see https://docs.astral.sh/ruff/rules/
    "E4", "E7", "E9",  # basic pycodestyle rules
    "W",     # pycodestyle warnings
    "F",     # Pyflakes rules
    "N",     # PEP8 naming conventions
    "PLR",   # Pylint refactoring recommendations
    "PTH",   # recommends to use pathlib instead of os.path
    "UP",    # pyupgrade suggestions
#    "BLE",   # locates blind exception capture
    "B",     # locates possible bugs and design problems
    "A",     # locates shadowing of builtin names
    "C4",    # locates possible issues with comprehensions
    "PIE",   # miscellaneous linting rules
    "DTZ",   # locates incorrect use of timezone information
    "TRY",   # locates potential exception handling antipatterns
    "PERF",  # locates potential performance issues
    "RUF",   # various Ruff-specific linting rules
]
# TODO: fix this to use Annotated instead of function call as default.
ignore = ["B008", "TRY003"]

[tool.isort]
profile = "black"
line_length = 88
filter_files = true
force_alphabetical_sort_within_sections = true

[tool.mypy]
mypy_path = ""
files = ["asr/", "hotword/", "nlu/", "raspvan", "respeaker"]
ignore_missing_imports = true
warn_unused_ignores = true

[mypy]
ignore_missing_imports = true

[metadata]
description-file = README.md
license_file = LICENSE.txt
